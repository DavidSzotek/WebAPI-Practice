// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI_Practice.Data;

#nullable disable

namespace WebAPI_Practice.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240111101428_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaterialPrintertype", b =>
                {
                    b.Property<int>("MaterialsId")
                        .HasColumnType("int");

                    b.Property<int>("PrintertypesId")
                        .HasColumnType("int");

                    b.HasKey("MaterialsId", "PrintertypesId");

                    b.HasIndex("PrintertypesId");

                    b.ToTable("MaterialPrintertype");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Functiontype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Functiontypes");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsAlternative")
                        .HasColumnType("bit");

                    b.Property<int>("MaterialtypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("PriceDph")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MaterialtypeId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Materialtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Materialtypes");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Printertype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FunctiontypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsA3")
                        .HasColumnType("bit");

                    b.Property<bool>("IsColor")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctiontypeId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Printertypes");
                });

            modelBuilder.Entity("MaterialPrintertype", b =>
                {
                    b.HasOne("WebAPI_Practice.Models.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_Practice.Models.Printertype", null)
                        .WithMany()
                        .HasForeignKey("PrintertypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Material", b =>
                {
                    b.HasOne("WebAPI_Practice.Models.Materialtype", "Materiatltype")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materiatltype");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Printertype", b =>
                {
                    b.HasOne("WebAPI_Practice.Models.Functiontype", "Functiontype")
                        .WithMany("Printertypes")
                        .HasForeignKey("FunctiontypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_Practice.Models.Manufacturer", "Manufacturer")
                        .WithMany("Printertypes")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Functiontype");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Functiontype", b =>
                {
                    b.Navigation("Printertypes");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Manufacturer", b =>
                {
                    b.Navigation("Printertypes");
                });

            modelBuilder.Entity("WebAPI_Practice.Models.Materialtype", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
